#!/usr/bin/python3
# -*- coding: utf-8 -*-

from PyQt5 import QtCore, QtGui, QtWidgets
import Presentacion.CONTROLLER_rubiks as Controller, sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidget,QTableWidgetItem,QFileDialog


class Ui_frm_principal(object):
    def __init__(self):
        super().__init__()
        self.controller = None
 
    def setupUi(self, frm_principal):
        frm_principal.setObjectName("frm_principal")
        frm_principal.resize(1110, 836)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(frm_principal.sizePolicy().hasHeightForWidth())
        frm_principal.setSizePolicy(sizePolicy)
        frm_principal.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.pnl_central = QtWidgets.QWidget(frm_principal)
        self.pnl_central.setObjectName("pnl_central")
        self.frm_cubo = QtWidgets.QFrame(self.pnl_central)
        self.frm_cubo.setGeometry(QtCore.QRect(270, 0, 600, 500))
        self.frm_cubo.setStyleSheet("background-color: rgb(20, 22, 50);")
        self.frm_cubo.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frm_cubo.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frm_cubo.setObjectName("frm_cubo")
        self.pic_cubo = QtWidgets.QLabel(self.frm_cubo)
        self.pic_cubo.setGeometry(QtCore.QRect(0, 0, 601, 501))
        self.pic_cubo.setText("")
        self.pic_cubo.setObjectName("pic_cubo")
        self.lbl_realizar_giro_2 = QtWidgets.QLabel(self.pnl_central)
        self.lbl_realizar_giro_2.setGeometry(QtCore.QRect(0, 520, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_realizar_giro_2.setFont(font)
        self.lbl_realizar_giro_2.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_realizar_giro_2.setScaledContents(False)
        self.lbl_realizar_giro_2.setObjectName("lbl_realizar_giro_2")
        self.frame_2 = QtWidgets.QFrame(self.pnl_central)
        self.frame_2.setGeometry(QtCore.QRect(0, 250, 271, 251))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.lbl_realizar_Movimiento_2 = QtWidgets.QLabel(self.frame_2)
        self.lbl_realizar_Movimiento_2.setGeometry(QtCore.QRect(140, 70, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_realizar_Movimiento_2.setFont(font)
        self.lbl_realizar_Movimiento_2.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_realizar_Movimiento_2.setScaledContents(False)
        self.lbl_realizar_Movimiento_2.setObjectName("lbl_realizar_Movimiento_2")
        self.radioButton_b = QtWidgets.QRadioButton(self.frame_2)
        self.radioButton_b.setGeometry(QtCore.QRect(70, 60, 41, 22))
        self.radioButton_b.setObjectName("radioButton_b")
        self.radioButton_B = QtWidgets.QRadioButton(self.frame_2)
        self.radioButton_B.setGeometry(QtCore.QRect(20, 60, 41, 22))
        self.radioButton_B.setChecked(True)
        self.radioButton_B.setObjectName("radioButton_B")
        self.radioButton_L = QtWidgets.QRadioButton(self.frame_2)
        self.radioButton_L.setGeometry(QtCore.QRect(20, 120, 41, 22))
        self.radioButton_L.setObjectName("radioButton_L")
        self.spinner_fila = QtWidgets.QSpinBox(self.frame_2)
        self.spinner_fila.setGeometry(QtCore.QRect(150, 100, 71, 32))
        self.spinner_fila.setObjectName("spinner_fila")
        self.radioButton_D = QtWidgets.QRadioButton(self.frame_2)
        self.radioButton_D.setGeometry(QtCore.QRect(20, 90, 41, 22))
        self.radioButton_D.setObjectName("radioButton_D")
        self.radioButton_d = QtWidgets.QRadioButton(self.frame_2)
        self.radioButton_d.setGeometry(QtCore.QRect(70, 90, 41, 22))
        self.radioButton_d.setObjectName("radioButton_d")
        self.radioButton_l = QtWidgets.QRadioButton(self.frame_2)
        self.radioButton_l.setGeometry(QtCore.QRect(70, 120, 31, 22))
        self.radioButton_l.setObjectName("radioButton_l")
        self.btn_ejecutar_movimiento = QtWidgets.QPushButton(self.frame_2)
        self.btn_ejecutar_movimiento.setGeometry(QtCore.QRect(70, 190, 121, 41))
        self.btn_ejecutar_movimiento.setDefault(False)
        self.btn_ejecutar_movimiento.setFlat(False)
        self.btn_ejecutar_movimiento.setObjectName("btn_ejecutar_movimiento")
        self.lbl_realizar_giro = QtWidgets.QLabel(self.frame_2)
        self.lbl_realizar_giro.setGeometry(QtCore.QRect(10, 10, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_realizar_giro.setFont(font)
        self.lbl_realizar_giro.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_realizar_giro.setScaledContents(False)
        self.lbl_realizar_giro.setObjectName("lbl_realizar_giro")
        self.frame = QtWidgets.QFrame(self.pnl_central)
        self.frame.setEnabled(True)
        self.frame.setGeometry(QtCore.QRect(0, 0, 271, 251))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.spinner_profundidad = QtWidgets.QSpinBox(self.frame)
        self.spinner_profundidad.setGeometry(QtCore.QRect(20, 130, 81, 41))
        self.spinner_profundidad.setObjectName("spinner_profundidad")
        self.checkBox = QtWidgets.QCheckBox(self.frame)
        self.checkBox.setGeometry(QtCore.QRect(150, 110, 111, 61))
        self.checkBox.setChecked(True)
        self.checkBox.setObjectName("checkBox")
        self.btn_ejecutar_busqueda = QtWidgets.QPushButton(self.frame)
        self.btn_ejecutar_busqueda.setGeometry(QtCore.QRect(70, 190, 121, 41))
        self.btn_ejecutar_busqueda.setDefault(False)
        self.btn_ejecutar_busqueda.setFlat(False)
        self.btn_ejecutar_busqueda.setObjectName("btn_ejecutar_busqueda")
        self.cb_busquedas = QtWidgets.QComboBox(self.frame)
        self.cb_busquedas.setGeometry(QtCore.QRect(40, 50, 181, 32))
        self.cb_busquedas.setObjectName("cb_busquedas")
        self.lbl_realizar_Movimiento_3 = QtWidgets.QLabel(self.frame)
        self.lbl_realizar_Movimiento_3.setGeometry(QtCore.QRect(20, 90, 81, 41))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_realizar_Movimiento_3.sizePolicy().hasHeightForWidth())
        self.lbl_realizar_Movimiento_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.lbl_realizar_Movimiento_3.setFont(font)
        self.lbl_realizar_Movimiento_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lbl_realizar_Movimiento_3.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_realizar_Movimiento_3.setScaledContents(False)
        self.lbl_realizar_Movimiento_3.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_realizar_Movimiento_3.setWordWrap(True)
        self.lbl_realizar_Movimiento_3.setIndent(0)
        self.lbl_realizar_Movimiento_3.setObjectName("lbl_realizar_Movimiento_3")
        self.lbl_busquedas = QtWidgets.QLabel(self.frame)
        self.lbl_busquedas.setGeometry(QtCore.QRect(10, 10, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_busquedas.setFont(font)
        self.lbl_busquedas.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_busquedas.setScaledContents(False)
        self.lbl_busquedas.setObjectName("lbl_busquedas")
        self.debug_area = QtWidgets.QTextBrowser(self.pnl_central)
        self.debug_area.setEnabled(True)
        self.debug_area.setGeometry(QtCore.QRect(700, 550, 411, 231))
        self.debug_area.setReadOnly(True)
        self.debug_area.setObjectName("debug_area")
        self.lbl_cubo_cargado = QtWidgets.QLabel(self.pnl_central)
        self.lbl_cubo_cargado.setGeometry(QtCore.QRect(420, 510, 261, 91))
        font = QtGui.QFont()
        font.setPointSize(21)
        self.lbl_cubo_cargado.setFont(font)
        self.lbl_cubo_cargado.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.lbl_cubo_cargado.setWordWrap(True)
        self.lbl_cubo_cargado.setObjectName("lbl_cubo_cargado")
        self.lbl_size_cubo_cargado = QtWidgets.QLabel(self.pnl_central)
        self.lbl_size_cubo_cargado.setGeometry(QtCore.QRect(430, 600, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(21)
        self.lbl_size_cubo_cargado.setFont(font)
        self.lbl_size_cubo_cargado.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_size_cubo_cargado.setObjectName("lbl_size_cubo_cargado")
        self.table_nodo_actual = QtWidgets.QTableWidget(self.pnl_central)
        self.table_nodo_actual.setGeometry(QtCore.QRect(0, 550, 411, 231))
        self.table_nodo_actual.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_nodo_actual.setAlternatingRowColors(True)
        self.table_nodo_actual.setObjectName("table_nodo_actual")
        self.table_nodo_actual.setColumnCount(0)
        self.table_nodo_actual.setRowCount(0)
        self.table_nodo_actual.horizontalHeader().setVisible(False)
        self.table_nodo_actual.verticalHeader().setVisible(False)
        self.lbl_realizar_giro_3 = QtWidgets.QLabel(self.pnl_central)
        self.lbl_realizar_giro_3.setGeometry(QtCore.QRect(1020, 520, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_realizar_giro_3.setFont(font)
        self.lbl_realizar_giro_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lbl_realizar_giro_3.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_realizar_giro_3.setScaledContents(False)
        self.lbl_realizar_giro_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lbl_realizar_giro_3.setObjectName("lbl_realizar_giro_3")
        self.frame_3 = QtWidgets.QFrame(self.pnl_central)
        self.frame_3.setGeometry(QtCore.QRect(870, 0, 241, 501))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.lst_movimientos_realizados = QtWidgets.QListWidget(self.frame_3)
        self.lst_movimientos_realizados.setGeometry(QtCore.QRect(0, 40, 241, 301))
        self.lst_movimientos_realizados.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.SelectedClicked)
        self.lst_movimientos_realizados.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.lst_movimientos_realizados.setWordWrap(True)
        self.lst_movimientos_realizados.setItemAlignment(QtCore.Qt.AlignHCenter)
        self.lst_movimientos_realizados.setObjectName("lst_movimientos_realizados")
        self.lbl_busquedas_2 = QtWidgets.QLabel(self.frame_3)
        self.lbl_busquedas_2.setGeometry(QtCore.QRect(10, 10, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_busquedas_2.setFont(font)
        self.lbl_busquedas_2.setTextFormat(QtCore.Qt.AutoText)
        self.lbl_busquedas_2.setScaledContents(False)
        self.lbl_busquedas_2.setObjectName("lbl_busquedas_2")
        self.btn_deshacer_ult_mov = QtWidgets.QPushButton(self.frame_3)
        self.btn_deshacer_ult_mov.setGeometry(QtCore.QRect(10, 350, 221, 41))
        self.btn_deshacer_ult_mov.setObjectName("btn_deshacer_ult_mov")
        self.btn_reset_cubo = QtWidgets.QPushButton(self.frame_3)
        self.btn_reset_cubo.setGeometry(QtCore.QRect(10, 400, 221, 41))
        self.btn_reset_cubo.setDefault(False)
        self.btn_reset_cubo.setFlat(False)
        self.btn_reset_cubo.setObjectName("btn_reset_cubo")
        self.btn_cargar_json = QtWidgets.QPushButton(self.pnl_central)
        self.btn_cargar_json.setGeometry(QtCore.QRect(470, 670, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_cargar_json.setFont(font)
        self.btn_cargar_json.setObjectName("btn_cargar_json")
        frm_principal.setCentralWidget(self.pnl_central)
        self.menubar = QtWidgets.QMenuBar(frm_principal)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1110, 30))
        self.menubar.setObjectName("menubar")
        self.menuCargar_cubo = QtWidgets.QMenu(self.menubar)
        self.menuCargar_cubo.setObjectName("menuCargar_cubo")
        frm_principal.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(frm_principal)
        self.statusbar.setObjectName("statusbar")
        frm_principal.setStatusBar(self.statusbar)
        self.actionGuardar_Cubo = QtWidgets.QAction(frm_principal)
        self.actionGuardar_Cubo.setObjectName("actionGuardar_Cubo")
        self.actionCargar_Cubo = QtWidgets.QAction(frm_principal)
        self.actionCargar_Cubo.setObjectName("actionCargar_Cubo")
        self.actionPreferencias = QtWidgets.QAction(frm_principal)
        self.actionPreferencias.setObjectName("actionPreferencias")
        self.actionExportar_imagen = QtWidgets.QAction(frm_principal)
        self.actionExportar_imagen.setObjectName("actionExportar_imagen")
        self.actionExportar_movimientos_realizados = QtWidgets.QAction(frm_principal)
        self.actionExportar_movimientos_realizados.setObjectName("actionExportar_movimientos_realizados")
        self.actionBorrar_imagenes = QtWidgets.QAction(frm_principal)
        self.actionBorrar_imagenes.setObjectName("actionBorrar_imagenes")
        self.menuCargar_cubo.addAction(self.actionGuardar_Cubo)
        self.menuCargar_cubo.addAction(self.actionCargar_Cubo)
        self.menuCargar_cubo.addSeparator()
        self.menuCargar_cubo.addAction(self.actionBorrar_imagenes)
        self.menuCargar_cubo.addAction(self.actionExportar_movimientos_realizados)
        self.menuCargar_cubo.addAction(self.actionPreferencias)
        self.menubar.addAction(self.menuCargar_cubo.menuAction())

        self.retranslateUi(frm_principal)
        QtCore.QMetaObject.connectSlotsByName(frm_principal)

    def retranslateUi(self, frm_principal):
        _translate = QtCore.QCoreApplication.translate
        frm_principal.setWindowTitle(_translate("frm_principal", "Rubik\'s Resolver"))
        self.lbl_realizar_giro_2.setText(_translate("frm_principal", "Nodo actual"))
        self.lbl_realizar_Movimiento_2.setText(_translate("frm_principal", "Fila / Columna"))
        self.radioButton_b.setText(_translate("frm_principal", "b"))
        self.radioButton_B.setText(_translate("frm_principal", "B"))
        self.radioButton_L.setText(_translate("frm_principal", "L"))
        self.radioButton_D.setText(_translate("frm_principal", "D"))
        self.radioButton_d.setText(_translate("frm_principal", "d"))
        self.radioButton_l.setText(_translate("frm_principal", "l"))
        self.btn_ejecutar_movimiento.setText(_translate("frm_principal", "Ejecutar"))
        self.lbl_realizar_giro.setText(_translate("frm_principal", "Girar cubo"))
        self.checkBox.setText(_translate("frm_principal", "Optimización"))
        self.btn_ejecutar_busqueda.setText(_translate("frm_principal", "Ejecutar"))
        self.lbl_realizar_Movimiento_3.setText(_translate("frm_principal", "Max. profundidad"))
        self.lbl_busquedas.setText(_translate("frm_principal", "Búsquedas"))
        self.lbl_cubo_cargado.setText(_translate("frm_principal", "Ningún cubo cargado"))
        self.lbl_size_cubo_cargado.setText(_translate("frm_principal", "N x N"))
        self.lbl_realizar_giro_3.setText(_translate("frm_principal", "Log"))
        self.lbl_busquedas_2.setText(_translate("frm_principal", "Historial"))
        self.btn_deshacer_ult_mov.setText(_translate("frm_principal", "Deshacer ult. movimiento"))
        self.btn_reset_cubo.setText(_translate("frm_principal", "Reiniciar"))
        self.btn_cargar_json.setText(_translate("frm_principal", "Cargar JSON"))
        self.menuCargar_cubo.setTitle(_translate("frm_principal", "Opciones"))
        self.actionGuardar_Cubo.setText(_translate("frm_principal", "Guardar Cubo"))
        self.actionCargar_Cubo.setText(_translate("frm_principal", "Cargar Cubo"))
        self.actionPreferencias.setText(_translate("frm_principal", "Preferencias..."))
        self.actionExportar_imagen.setText(_translate("frm_principal", "Imagen"))
        self.actionExportar_movimientos_realizados.setText(_translate("frm_principal", "Exportar movimientos realizados"))
        self.actionBorrar_imagenes.setText(_translate("frm_principal", "Borrar carpeta de imagenes"))



# --------------- HASTA AQUI LO QUE HA SIDO GENERADO AUTOMATICAMENTE --------
    def setValues(self):
        #combo_box estrategias
        self.cb_busquedas.clear()
        busquedas = ['A Estrella', 'Voraz', 'Profundidad', 'Anchura', 'Costo uniforme']
        self.cb_busquedas.addItems(busquedas)
        
        #table valores del nodo
        self.table_nodo_actual.setRowCount(7)
        self.table_nodo_actual.setColumnCount(2)
        header = self.table_nodo_actual.horizontalHeader()       
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeToContents)
        self.table_nodo_actual.setItem(0,0, QTableWidgetItem("ID "))
        self.table_nodo_actual.setItem(1,0, QTableWidgetItem("Movimiento "))
        self.table_nodo_actual.setItem(2,0, QTableWidgetItem("Estado "))
        self.table_nodo_actual.setItem(3,0, QTableWidgetItem("Coste "))
        self.table_nodo_actual.setItem(4,0, QTableWidgetItem("Profundidad "))
        self.table_nodo_actual.setItem(5,0, QTableWidgetItem("Heuristica "))
        self.table_nodo_actual.setItem(6,0, QTableWidgetItem("F "))
        
        #button group movement translator
        movement_array = []
        movement_array.append((self.radioButton_B, 'B'))
        movement_array.append((self.radioButton_b, 'b'))
        movement_array.append((self.radioButton_D, 'D'))
        movement_array.append((self.radioButton_d, 'd'))
        movement_array.append((self.radioButton_L, 'L'))
        movement_array.append((self.radioButton_l, 'l'))
        self.controller.radio_btn_array = movement_array
        self.controller.spinner_fila = self.spinner_fila
        
        #pic container
        self.controller.pic_container = self.pic_cubo
        
        #paneles para bloquear y desbloquear
        lista_paneles = []
        lista_paneles.append(self.frame)
        lista_paneles.append(self.frame_2)
        lista_paneles.append(self.frame_3)
        self.controller.paneles_a_manejar = lista_paneles
        self.controller.activarPaneles(False)

    def setActions(self):
        #self.btn_1.clicked.connect(lambda: self.controller.printPrueba('Sole que te meto con el mechero'))
        self.actionCargar_Cubo.triggered.connect(self.openFileNameDialog)
        self.actionBorrar_imagenes.triggered.connect(self.controller.limpiarImagenes)
        self.btn_ejecutar_movimiento.clicked.connect(lambda: self.controller.moverCubo())
        self.lst_movimientos_realizados.clicked.connect(lambda: self.controller.historialClicado())
        self.btn_reset_cubo.clicked.connect(lambda: self.controller.rebootCubo())
        self.btn_cargar_json.clicked.connect(lambda: self.openFileNameDialog())
        self.btn_ejecutar_busqueda.clicked.connect(lambda: self.controller.resolver(self.checkBox.isChecked(), self.spinner_profundidad.value(), self.cb_busquedas.currentText()))
        self.actionExportar_movimientos_realizados.triggered.connect(self.controller.exportarMovimientos)
    
    def openFileNameDialog(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        fileName, _ = QFileDialog.getOpenFileName(None ,"QFileDialog.getOpenFileName()", "","JSON Files (*.json)")
        archivo = None
        if fileName:
            archivo = fileName
            self.controller.debugPrint(f'Cargado archivo: {archivo}')
            self.controller.cambiarCubo(archivo)
            self.spinner_fila.setRange(0,self.controller.max_column)
            self.spinner_fila.setValue(0)
            import ntpath
            head, tail = ntpath.split(fileName)
            self.lbl_size_cubo_cargado.setText(f'{self.controller.max_column + 1} x {self.controller.max_column + 1}')
            self.lbl_cubo_cargado.setText(tail[:-5])

        else:
            self.controller.debugPrint('Cancelada carga de archivo')
    
    def initController(self):
        self.controller.debug_area = self.debug_area
        self.controller.gui_historial_nodos = self.lst_movimientos_realizados
        self.controller.node_table = self.table_nodo_actual
        

def start():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    frm_principal = QtWidgets.QMainWindow()
    ui = Ui_frm_principal()
    controller = Controller.Controller()
    ui.controller = controller
    ui.setupUi(frm_principal)
    ui.initController()
    ui.setActions()
    ui.setValues()
    frm_principal.show()
    sys.exit(app.exec_())